# Notes: this receipt is based on torchvision-feedstock:
# https://github.com/conda-forge/torchvision-feedstock/blob/master/recipe/meta.yaml

{% set version = "2.2.2" %}
# see github.com/conda-forge/conda-forge.github.io/issues/1059 for naming discussion
{% set torch_proc_type = "cuda" if cuda_compiler_version != "None" else "cpu" %}


package:
  name: torchani
  version: {{ version }}

source:
  url: https://github.com/aiqm/torchani/archive/refs/tags/{{ version }}.tar.gz
  sha256: 525275f314a63421f27996446f39ef5f6fee5d82442566ed6c71a61e4062fc6f

build:
  number: 4
  skip: true  # [win]
  string: cuda{{ cuda_compiler_version | replace('.', '') }}py{{ CONDA_PY }}h{{ PKG_HASH }}_{{ PKG_BUILDNUM }}  # [cuda_compiler_version != "None"]
  string: cpu_py{{ CONDA_PY }}h{{ PKG_HASH }}_{{ PKG_BUILDNUM }}                                      # [cuda_compiler_version == "None"]
  script_env:
  - SETUPTOOLS_SCM_PRETEND_VERSION={{ version }}
  script:
    - "{{ PYTHON }} -m pip install . --global-option='--cuaev-all-sms' -vvv --no-deps"  # [cuda_compiler_version != "None"]
    - "{{ PYTHON }} -m pip install . -vvv --no-deps"                                    # [cuda_compiler_version == "None"]

requirements:
  build:
    - {{ compiler('c') }}
    - {{ compiler('cxx') }}
    - {{ compiler('cuda') }}              # [cuda_compiler_version != "None"]
    - sysroot_linux-64 ==2.17             # [linux64]
    - cross-python_{{ target_platform }}  # [build_platform != target_platform]
    - python                              # [build_platform != target_platform]
    - numpy                               # [build_platform != target_platform]
    - cython                              # [build_platform != target_platform]
  host:
    - python
    - numpy
    - pip
    # TODO pinning setuptools because of https://stackoverflow.com/a/70520199
    # Can remove pinning when pytorch gets to 1.11
    - setuptools ==59.5.0
    - setuptools_scm ==6.3.2
    - importlib_metadata
    - pytorch
    - pytorch =*={{ torch_proc_type }}*
    # cuda 10.2 does not have cub, which need to be manually downloaded in setup.py
    - wget                               # [cuda_compiler_version == "10.2"]
    - unzip                              # [cuda_compiler_version == "10.2"]
  run:
    - python
    - pip
    - setuptools ==59.5.0
    - setuptools_scm ==6.3.2
    - importlib_metadata
    - lark-parser
    - requests
    - h5py
    - {{ pin_compatible('numpy') }}
  run_constrained:
    # 2022/02/05 hmaarrfk
    # While conda packaging seems to allow us to specify
    # constraints on the same package in different lines
    # the resulting package doesn't have the ability to
    # be specified in multiples lines
    # This makes it tricky to use run_exports
    # we add the GPU constraint in the run_constrained
    # to allow us to have "two" constraints on the
    # running package
    - pytorch =*={{ torch_proc_type }}*

test:
  imports:
    - torchani
    - torchani.cuaev                     # [cuda_compiler_version != "None"]
  source_files:
    - torchani/resources/*
    - tests/*
    - tools/*
    - download.sh
    - dataset/*
    - test_requirements.txt
  requires:
    - wget
    - unzip
    - tensorboard
    - tqdm
    - ase
    - h5py
    - pillow
    - pyyaml
    - pytest
    - expecttest
    - pkbar
  commands:
    # download testing datasets
    - ./download.sh                                                           # [linux64]
    # broken symlink that got ignored when copying
    - ln -s ../download/dataset/ani-1x/ dataset/ani-1x                        # [linux64]
    - ln -s ../download/dataset/ani1-up_to_gdb4/ dataset/ani1-up_to_gdb4      # [linux64]
    # test
    - cd tests; python -m pytest -v -s *.py                                   # [linux64]

about:
  home: https://github.com/aiqm/torchani
  license: MIT
  license_family: MIT
  license_file: LICENSE
  summary: 'Accurate Neural Network Potential on PyTorch'

extra:
  recipe-maintainers:
    - hadim
    - yueyericardo
