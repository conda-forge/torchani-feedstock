{% set name = "torchani" %}
{% set version = "2.2" %}

package:
  name: {{ name|lower }}
  version: {{ version }}

source:
  # url: https://pypi.io/packages/source/{{ name[0] }}/{{ name }}/{{ name }}-{{ version }}.tar.gz
  # sha256: c086fe6cabe49a0408d1f1b12aaf14e33b9e6ef0ffb15f3020792934e7c9fbbe

  git_url: https://github.com/aiqm/torchani.git
  git_rev: master

build:
  number: 0
  # skip: true  # [win or (linux and cuda_compiler_version in (undefined, 'None'))]
  rpaths:
    - lib/
    - {{ SP_DIR }}/torch/lib
  missing_dso_whitelist:
    - "*/libcuda.*"  # [linux64 or ppc64le]
  script: {{ PYTHON }} -m pip install . -vv  # [cuda_compiler_version in (undefined, 'None')]
  script: {{ PYTHON }} -m pip install . -vv  --cuaev  # [cuda_compiler_version not in (undefined, 'None')]

requirements:

  build:
  - {{ compiler('c') }}
  - {{ compiler('cxx') }}
  - {{ compiler('cuda') }}  # [cuda_compiler_version not in (undefined, 'None')]
  - {{ cdt('mesa-libgl-devel') }}  # [linux]
  - make
  - ninja  # [cuda_compiler_version not in (undefined, 'None')]

  host:
    - python
    - pip
    - setuptools_scm
    - pytorch-gpu  # [cuda_compiler_version not in (undefined, 'None')]
    - pytorch-cpu  # [osx]

  run:
    - python
    - setuptools
    - lark-parser
    - requests
    # ^ needed so conda build does not complain about overlinking
    - {{ pin_compatible('pytorch-gpu') }}  # [cuda_compiler_version not in (undefined, 'None')]
    - {{ pin_compatible('pytorch-cpu') }}  # [cuda_compiler_version in (undefined, 'None')]

test:
  requires:
    - importlib_metadata
  imports:
    - torchani
    - torchani.cuaev  # [cuda_compiler_version not in (undefined, 'None')]

about:
  home: https://github.com/aiqm/torchani
  license: MIT
  license_family: MIT
  license_file: LICENSE
  summary: 'Accurate Neural Network Potential on PyTorch'

extra:
  recipe-maintainers:
    - hadim
